name: "Docker Build - GitHub Container Registry"

on:
  workflow_dispatch:
  workflow_run:
    workflows: [Create Release]
    types:
      - completed  

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Get current date
        id: getDate
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Get semantic version from file
        id: getSemver
        run: echo "semver=$(cat VERSION | tr -d ' \t\n\r' )" >> $GITHUB_OUTPUT

      - name: Get lowercase repository name
        id: repo
        run: echo "repo=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install runtime dependencies
        run: pip install -r requirements.txt

      - name: Install test dependencies
        run: pip install -r requirements-test.txt

      - name: Run tests with coverage
        run: coverage run -m pytest tests/test_redalert.py -v

      - name: Generate coverage report
        run: |
          echo "## Test Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          coverage report -m --include="redalert.py" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          
      - name: Coverage Badge
        run: |
          COVERAGE=$(coverage report --include="redalert.py" | grep TOTAL | awk '{print $4}' | sed 's/%//')
          echo "Coverage: ${COVERAGE}%"
          if [ "$COVERAGE" -ge 90 ]; then
            echo "✅ Excellent coverage (${COVERAGE}%)"
          elif [ "$COVERAGE" -ge 80 ]; then
            echo "✅ Good coverage (${COVERAGE}%)"
          elif [ "$COVERAGE" -ge 70 ]; then
            echo "⚠️ Acceptable coverage (${COVERAGE}%)"
          else
            echo "❌ Low coverage (${COVERAGE}%)"
            exit 1
          fi

      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ steps.repo.outputs.repo }}:latest
            ghcr.io/${{ steps.repo.outputs.repo }}:${{ steps.getSemver.outputs.semver }} 